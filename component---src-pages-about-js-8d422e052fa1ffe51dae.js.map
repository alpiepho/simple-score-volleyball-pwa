{"version":3,"sources":["webpack:///./src/components/about.js","webpack:///./src/scores/services/auth.js","webpack:///./src/pages/about.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/controlbutton.js","webpack:///./src/components/title.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","About","classes","title","className","Grid","container","spacing","justify","direction","label","Typography","paragraph","variant","gutterBottom","color","backgroundColor","onButtonClick","navigate","isBrowser","window","netlifyIdentity","init","AboutPage","Layout","children","style","margin","maxWidth","padding","paddingTop","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","button","width","borderRadius","props","transform","horizontal","ControlButton","aria-label","onClick","Title","item","xs"],"mappings":"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","file":"component---src-pages-about-js-8d422e052fa1ffe51dae.js","sourcesContent":["import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Title from \"../components/title\"\nimport ControlButton from \"../components/controlbutton\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"80vh\",\n  },\n}))\n\nconst About = () => {\n  const classes = useStyles()\n\n  const onOkClick = () => {\n    navigate(\"/home/\")\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <div className=\"about-component\">\n        <Grid\n          className={classes.root}\n          container\n          spacing={0}\n          justify=\"space-around\"\n          direction=\"column\"\n        >\n          <Title label=\"Simple Score - Volleyball\" />\n          <Typography\n            className={classes.paragraph}\n            variant=\"body1\"\n            gutterBottom\n          >\n            This is a simple PWA (progressive web application) that allows you\n            to track the score of a volleyball match and optionally send the\n            match results to a list of predefined phone numbers as a text.\n          </Typography>\n          <Typography\n            className={classes.paragraph}\n            variant=\"body1\"\n            gutterBottom\n          >\n            To send texts, you must first have a login created from your email,\n            attempt to login, then verify your email. Once logged in, you will\n            be able to send results. (currently, the text list is set by the\n            admin.)\n          </Typography>\n          <ControlButton\n            color=\"black\"\n            backgroundColor=\"gray\"\n            onButtonClick={onOkClick}\n          >\n            Ok\n          </ControlButton>\n        </Grid>\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n","import netlifyIdentity from \"netlify-identity-widget\"\n\nexport const isBrowser = () => typeof window !== \"undefined\"\nexport const initAuth = () => {\n  if (isBrowser()) {\n    window.netlifyIdentity = netlifyIdentity\n    // You must run this once before trying to interact with the widget\n    netlifyIdentity.init()\n  }\n}\nexport const getUser = () =>\n  isBrowser() && window.localStorage.getItem(\"netlifyUser\")\n    ? JSON.parse(window.localStorage.getItem(\"netlifyUser\"))\n    : {}\n\nconst setUser = user =>\n  window.localStorage.setItem(\"netlifyUser\", JSON.stringify(user))\n\nexport const handleLogin = callback => {\n  if (isLoggedIn()) {\n    callback(getUser())\n  } else {\n    netlifyIdentity.open()\n    netlifyIdentity.on(\"login\", user => {\n      setUser(user)\n      callback(user)\n    })\n  }\n}\n\nexport const isLoggedIn = () => {\n  if (!isBrowser()) return false\n  const user = netlifyIdentity.currentUser()\n  return !!user\n}\n\nexport const logout = callback => {\n  netlifyIdentity.logout()\n  netlifyIdentity.on(\"logout\", () => {\n    setUser({})\n    callback()\n  })\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport About from \"../components/about\"\nimport { initAuth } from \"../scores/services/auth\"\ninitAuth()\n\nconst AboutPage = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <About />\n  </Layout>\n)\n\nexport default AboutPage\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: \"100%\",\n    height: \"8vh\",\n    borderRadius: 20,\n    color: props => props.color,\n    backgroundColor: props => props.backgroundColor,\n    '&:hover, &:focus': {\n      color: props => props.color,\n      backgroundColor: props => props.backgroundColor,\n    },\n    transform: props => { return(props.horizontal ? \"rotate(-90deg)\" : \"\") }\n  },\n}))\n\nexport default function ControlButton(props) {\n  const classes = useStyles(props)\n\n  const onButtonClick = () => {\n    props.onButtonClick()\n  }\n\n  return (\n      <Button\n        aria-label=\"control button\"\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onButtonClick}\n      >\n         {props.children}\n      </Button>\n  )\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"10vh\",\n  },\n}))\n\nexport default function Title(props) {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={3} justify=\"space-around\" direction=\"row\">\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n        <h2 className={classes.title}>{props.label}</h2>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n"],"sourceRoot":""}