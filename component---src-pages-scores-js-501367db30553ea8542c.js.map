{"version":3,"sources":["webpack:///./src/scores/main.js","webpack:///./src/scores/scores.js","webpack:///./src/pages/scores.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/controlbutton.js","webpack:///./src/components/landscapewarning.js","webpack:///./src/components/utils.js","webpack:///./src/components/title.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginTop","buttonRow","width","marginLeft","Main","classes","useState","label1","setLabel1","match1","setMatch1","score1","setScore1","label2","setLabel2","match2","setMatch2","score2","setScore2","useEffect","settings","getFromLS","JSON","parse","title","className","Grid","container","spacing","justify","direction","item","label","alignItems","subtitle","score","Typography","xs","color","backgroundColor","onButtonClick","navigate","App","Scores","Layout","children","style","margin","maxWidth","padding","paddingTop","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","button","height","borderRadius","props","transform","horizontal","ControlButton","aria-label","variant","onClick","textfield","LandscapeWarning","paragraph","gutterBottom","key","ls","window","localStorage","getItem","e","saveToLS","value","setItem","Title"],"mappings":"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","file":"component---src-pages-scores-js-501367db30553ea8542c.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { navigate } from \"gatsby\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n//import { getUser, isLoggedIn, logout } from \"./services/auth\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LandscapeWarning from \"../components/landscapewarning\"\nimport Title from \"../components/title\"\nimport ControlButton from \"../components/controlbutton\"\nimport { getFromLS } from \"../components/utils\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 40,\n  },\n  buttonRow: {\n    width: \"80vw\",\n    marginTop: 10,\n    marginLeft: 10,\n  },\n}))\n\nconst Main = () => {\n  const classes = useStyles()\n\n  const [label1, setLabel1] = useState(\"US\")\n  const [match1, setMatch1] = useState(0)\n  const [score1, setScore1] = useState(0)\n  const [label2, setLabel2] = useState(\"THEM\")\n  const [match2, setMatch2] = useState(0)\n  const [score2, setScore2] = useState(0)\n\n  const unpackSettings = () => {\n    let settings = getFromLS(\"allSettings\")\n    if (settings) {\n      settings = JSON.parse(settings)\n\n      setLabel1(settings.label1)\n      setMatch1(settings.match1)\n      setScore1(settings.score1)\n\n      setLabel2(settings.label2)\n      setMatch2(settings.match2)\n      setScore2(settings.score2)\n    }\n  }\n\n  useEffect(() => {\n    unpackSettings()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onCancelClick = () => {\n    navigate(\"/home/\")\n  }\n\n  const onSaveClick = () => {\n    navigate(\"/home/\")\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Scores\" />\n      <>\n        <div className=\"scores-vertical\">\n          <Grid\n            className={classes.root}\n            container\n            spacing={0}\n            justify=\"space-around\"\n            direction=\"column\"\n          >\n            <Grid item className={classes.title}>\n              <Title label=\"Scores\" />\n            </Grid>\n\n            <Grid\n              className={classes.root}\n              container\n              spacing={0}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              direction=\"column\"\n            >\n              <Grid item className={classes.subtitle}>\n                <h2>Game</h2>\n              </Grid>\n              <Grid item className={classes.score}>\n                <h3>\n                  {label1} : {score1}\n                </h3>\n              </Grid>\n              <Grid item className={classes.score}>\n                <h3>\n                  {label2} : {score2}\n                </h3>\n              </Grid>\n            </Grid>\n\n            <Grid\n              className={classes.root}\n              container\n              spacing={0}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              direction=\"column\"\n            >\n              <Grid item className={classes.subtitle}>\n                <h2>Match</h2>\n              </Grid>\n              <Grid item className={classes.score}>\n                <h3>\n                  {label1} : {match1}\n                </h3>\n              </Grid>\n              <Grid item className={classes.score}>\n                <h3>\n                  {label2} : {match2}\n                </h3>\n              </Grid>\n            </Grid>\n\n            <Grid\n              className={classes.root}\n              container\n              spacing={0}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              direction=\"column\"\n            >\n              <Typography>TODO: Add Text Area for Note</Typography>\n            </Grid>\n\n            <Grid\n              className={classes.buttonRow}\n              container\n              spacing={8}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              direction=\"row\"\n            >\n              <Grid item xs={4}>\n                <ControlButton\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onCancelClick}\n                >\n                  Cancel\n                </ControlButton>\n              </Grid>\n              <Grid item xs={4}>\n                <ControlButton\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onSaveClick}\n                >\n                  Save\n                </ControlButton>\n              </Grid>\n            </Grid>\n          </Grid>{\" \"}\n        </div>\n        <div className=\"scores-horizontal\">\n          <LandscapeWarning />\n        </div>\n      </>\n    </Layout>\n  )\n}\n\nexport default Main\n\n// import React from 'react'\n// import { Link, navigate } from \"gatsby\"\n// import { getUser, isLoggedIn, logout } from \"./services/auth\"\n\n// class Main extends React.Component {\n//   state = { loading: false, json: null }\n\n//   getMessage = () => {\n//     let us_them_order = true;\n//     let match_us = 2;\n//     let match_them = 1;\n//     let game_us = 3;\n//     let game_them = 4;\n//     let extra = 'Great serve by K!\\n...ran 6 points.'\n\n//     let message;\n\n//     if (us_them_order) {\n//       message = `\\nSimple Score VB:\n//       Match: Us (${match_us}) vs Them (${match_them})\n//       Game : Us (${game_us}) vs Them (${game_them})`\n//     }\n//     else {\n//       message = `\\nSimple Score VB:\n//       Match: Them (${match_them}) vs Us (${match_us})\n//       Game : Them (${game_them}) vs Us (${game_us})`\n//     }\n//     message += '\\n' + extra;\n//     return message;\n//   }\n\n//   handleClick = e => {\n//     e.preventDefault()\n//     const user = getUser()\n//     this.setState({ loading: true })\n\n//     fetch('/.netlify/functions/auth-send-sms', {\n//       method: 'POST',\n//       headers: {\n//         Accept: 'application/json',\n//         'Content-Type': 'application/json',\n//         Authorization: 'Bearer ' + user.token.access_token,\n//       },\n//       body: this.getMessage()\n//     })\n//       .then(response => response.json())\n//       .then(json => this.setState({ loading: false, json }))\n//   }\n\n//   render() {\n//     const { loading, json } = this.state\n//     const user = getUser()\n//     return (\n//       <>\n//         <h1>Settings: (TODO)</h1>\n//         <ul>\n//           <li>API: {user.api && user.api.apiURL}</li>\n//           <li>ID: {user.id}</li>\n//         </ul>\n//         <hr />\n\n//         <Link to=\"/home/\">Home</Link>\n//         {` `}\n//         {` `}\n//         {isLoggedIn() ? (\n//           <a\n//             href=\"/\"\n//             onClick={event => {\n//               event.preventDefault()\n//               logout(() => navigate(`/scores/login`))\n//             }}\n//           >\n//             Logout\n//           </a>\n//         ) : (\n//           <Link to=\"/scores/login\">Login</Link>\n//         )}\n//         <hr />\n\n//         <button onClick={this.handleClick}>\n//           {loading ? 'Loading...' : 'Send Text'}\n//         </button>\n//         <pre>{JSON.stringify(json, null, 2)}</pre>\n//       </>\n//     )\n//   }\n// }\n\n// export default Main\n","import React from \"react\"\n//import { Router } from \"@reach/router\" // comes with gatsby v2\n//import Layout from \"../components/layout\"\nimport Main from \"./main\" // NOT SHOWN\n//import PrivateRoute from \"./components/PrivateRoute\"\n//import Login from \"./login\"\n\n// remember everything in /scores/* is dynamic now!\nconst App = () => {\n  return (\n    <Main />\n    // <Layout>\n    //   <Router>\n    //     <PublicRoute path=\"/scores\">\n    //       <PrivateRoute path=\"/\" component={Main} />\n    //       <Login path=\"/login\" />\n    //     </PublicRoute>\n    //   </Router>\n    // </Layout>\n  )\n}\n//function PublicRoute(props) {\n//  return <div>{props.children}</div>\n//}\n\nexport default App\n","import Scores from '../scores/scores'\n\nexport default Scores\n\n// `src/scores` is not \"special\", it is re-exported by `src/pages/scores.js`\n// and contains all the clientside dynamic App pages that we dont want to be statically generated.\n// `src/pages/scores.js` skips the static generation process because of `gatsby-plugin-create-client-paths`\n// configured in `gatsby-config.js`\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: \"100%\",\n    height: \"8vh\",\n    borderRadius: 20,\n    color: props => props.color,\n    backgroundColor: props => props.backgroundColor,\n    '&:hover, &:focus': {\n      color: props => props.color,\n      backgroundColor: props => props.backgroundColor,\n    },\n    transform: props => { return(props.horizontal ? \"rotate(-90deg)\" : \"\") }\n  },\n}))\n\nexport default function ControlButton(props) {\n  const classes = useStyles(props)\n\n  const onButtonClick = () => {\n    props.onButtonClick()\n  }\n\n  return (\n      <Button\n        aria-label=\"control button\"\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onButtonClick}\n      >\n         {props.children}\n      </Button>\n  )\n}\n","import React from \"react\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 80,\n  },\n  title: {\n    width: \"80vw\",\n  },\n  button: {\n    width: \"80vw\",\n  },\n  textfield: {\n    width: 400,\n  },\n  buttonRow: {\n    width: \"80vw\",\n    marginTop: 10,\n  },\n}))\n\nconst LandscapeWarning = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid\n    className={classes.root}\n    container\n    spacing={0}\n    justify=\"space-around\"\n    direction=\"column\"\n  >\n    <Typography\n      className={classes.paragraph}\n      variant=\"body1\"\n      gutterBottom\n    >\n      Automatic formating for horizontal or landscape mode is not\n      available. A workaround is to lock the screen rotation on your\n      phone and use the settings for horizontal mode. Then all the text\n      will be rotated 90 degrees.\n    </Typography>\n  </Grid>\n)\n}\n\nexport default LandscapeWarning\n","\nexport function getFromLS(key) {\n  let ls = {}\n  if (window.localStorage) {\n    try {\n      ls = window.localStorage.getItem(\"simple-score-volleyball\")\n    } catch (e) {\n      /*Ignore*/\n    }\n  }\n  return ls\n}\n\nexport function saveToLS(key, value) {\n  if (window.localStorage) {\n    window.localStorage.setItem(\"simple-score-volleyball\", value)\n  }\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"10vh\",\n  },\n}))\n\nexport default function Title(props) {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={3} justify=\"space-around\" direction=\"row\">\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n        <h2 className={classes.title}>{props.label}</h2>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n"],"sourceRoot":""}