{"version":3,"sources":["webpack:///./src/components/settings.js","webpack:///./src/pages/settings.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/controlbutton.js","webpack:///./src/components/landscapewarning.js","webpack:///./src/components/utils.js","webpack:///./src/components/title.js","webpack:///./src/components/engine.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginTop","title","width","button","textfield","buttonRow","SettingsPage","classes","useState","horizontal","setHorizontal","color1","setColor1","backgroundColor1","setBackgroundColor1","label1","setLabel1","match1","setMatch1","score1","setScore1","color2","setColor2","backgroundColor2","setBackgroundColor2","label2","setLabel2","match2","setMatch2","score2","setScore2","gameDone","setGameDone","matchDone","setMatchDone","packSettings","settings","engine_save","JSON","stringify","saveToLS","useEffect","getFromLS","parse","engine_load","updateFromEngine","gameA","gameB","matchA","matchB","engine_get","className","Grid","container","spacing","justify","direction","item","label","alignItems","color","backgroundColor","onButtonClick","engine_undo","navigate","engine_finishGame","engine_resetGame","engine_finishMatch","engine_resetMatch","newLabel1","newLabel2","event","TextField","id","value","textField","helperText","margin","onChange","target","xs","Layout","children","style","maxWidth","padding","paddingTop","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","height","borderRadius","props","transform","ControlButton","variant","onClick","LandscapeWarning","paragraph","gutterBottom","key","ls","window","localStorage","getItem","e","setItem","Title","GAME_MAX","orderAB","stack","engine_push","entry","push","engine_check","engine_toggleOrder","length","pop","engine_pointA","engine_pointB"],"mappings":"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","file":"component---src-pages-settings-js-0f7820e27fe22569fe36.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { navigate } from \"gatsby\"\nimport { Grid, TextField } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LandscapeWarning from \"../components/landscapewarning\"\nimport Title from \"../components/title\"\nimport ControlButton from \"../components/controlbutton\"\nimport {\n  getFromLS,\n  saveToLS,\n} from \"./utils\"\nimport {\n  engine_undo,\n  engine_finishGame,\n  engine_resetGame,\n  engine_finishMatch,\n  engine_resetMatch,\n  engine_load,\n  engine_save,\n  engine_get\n } from \"./engine\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 40,\n  },\n  title: {\n    width: \"80vw\",\n  },\n  button: {\n    width: \"80vw\",\n  },\n  textfield: {\n    width: 400,\n  },\n  buttonRow: {\n    width: \"80vw\",\n    marginTop: 10,\n  },\n}))\n\nconst SettingsPage = () => {\n  const classes = useStyles()\n\n  const [horizontal, setHorizontal] = useState(false)\n\n  const [color1, setColor1] = useState(\"white\")\n  const [backgroundColor1, setBackgroundColor1] = useState(\"red\")\n  const [label1, setLabel1] = useState(\"US\")\n  const [match1, setMatch1] = useState(0)\n  const [score1, setScore1] = useState(0)\n\n  const [color2, setColor2] = useState(\"white\")\n  const [backgroundColor2, setBackgroundColor2] = useState(\"blue\")\n  const [label2, setLabel2] = useState(\"THEM\")\n  const [match2, setMatch2] = useState(0)\n  const [score2, setScore2] = useState(0)\n\n  const [gameDone, setGameDone] = useState(false)\n  const [matchDone, setMatchDone] = useState(false)\n\n  const packSettings = () => {\n    let settings = {}\n\n    settings[\"horizontal\"] = horizontal\n\n    settings[\"color1\"] = color1\n    settings[\"backgroundColor1\"] = backgroundColor1\n    settings[\"label1\"] = label1\n    settings[\"match1\"] = match1\n    settings[\"score1\"] = score1\n\n    settings[\"color2\"] = color2\n    settings[\"backgroundColor2\"] = backgroundColor2\n    settings[\"label2\"] = label2\n    settings[\"match2\"] = match2\n    settings[\"score2\"] = score2\n\n    settings[\"gameDone\"] = gameDone\n    settings[\"matchDone\"] = matchDone\n\n    settings['engine'] = engine_save()\n    //console.log('settings::pack')\n    //console.log(settings)\n    settings = JSON.stringify(settings)\n    saveToLS(\"allSettings\", settings)\n  }\n\n  const unpackSettings = () => {\n    let settings = getFromLS(\"allSettings\")\n    if (settings) {\n      settings = JSON.parse(settings)\n      //console.log('settings::unpack')\n      //console.log(settings)\n      if (settings['engine']) {\n        engine_load(settings['engine'])\n      }\n\n      setHorizontal(settings.horizontal)\n\n      setColor1(settings.color1)\n      setBackgroundColor1(settings.backgroundColor1)\n      setLabel1(settings.label1)\n      setMatch1(settings.match1)\n      setScore1(settings.score1)\n\n      setColor2(settings.color2)\n      setBackgroundColor2(settings.backgroundColor2)\n      setLabel2(settings.label2)\n      setMatch2(settings.match2)\n      setScore2(settings.score2)\n\n      setGameDone(settings.gameDone)\n      setMatchDone(settings.matchDone)\n    }\n  }\n\n  useEffect(() => {\n    unpackSettings()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    packSettings()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [score1, score2, match1, match2, gameDone, matchDone, label1, label2])\n\n  const updateFromEngine = () => {\n    let gameA\n    let gameB\n    let matchA\n    let matchB\n    let gameDone\n    let matchDone\n    ;[gameA, gameB, matchA, matchB, gameDone, matchDone] = engine_get()\n\n    //console.log('settings::updateFromEngine')\n    //console.log([gameA, gameB, matchA, matchB, gameDone, matchDone])\n    setScore1(gameA)\n    setScore2(gameB)\n    setMatch1(matchA)\n    setMatch2(matchB)\n    setGameDone(gameDone)\n    setMatchDone(matchDone)\n  }\n\n  const toggleGoodGuys = () => {\n    let newLabel1, newLabel2\n    if (label1 === \"US\") {\n      newLabel1 = \"GOOD GUYS\"\n      newLabel2 = \"BAD GUYS\"\n    } else if (label1 === \"THEM\") {\n      newLabel2 = \"GOOD GUYS\"\n      newLabel1 = \"BAD GUYS\"\n    } else if (label1 === \"GOOD GUYS\") {\n      newLabel1 = \"US\"\n      newLabel2 = \"THEM\"\n    } else if (label1 === \"BAD GUYS\") {\n      newLabel2 = \"US\"\n      newLabel1 = \"THEM\"\n    }\n    setLabel1(newLabel1)\n    setLabel2(newLabel2)\n  }\n\n  const onUndoClick = () => {\n    engine_undo()\n    updateFromEngine()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onFinishGameClick = () => {\n    engine_finishGame()\n    updateFromEngine()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onResetGameClick = () => {\n    engine_resetGame()\n    updateFromEngine()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onFinishMatchClick = () => {\n    engine_finishMatch()\n    updateFromEngine()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onResetMatchClick = () => {\n    engine_resetMatch()\n    updateFromEngine()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onToggleHorizontalClick = () => {\n    setHorizontal(!horizontal)\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onToggleGoodGuysClick = () => {\n    toggleGoodGuys()\n    packSettings()\n    navigate(\"/home/\")\n  }\n\n  const onDefaultColorsClick = (event) => {\n    setColor1(\"white\")\n    setColor2(\"white\")\n    setBackgroundColor1(\"red\")\n    setBackgroundColor2(\"blue\")\n  }\n\n  const onColorChange1 = (event) => {\n    setColor1(event.target.value)\n  }\n\n  const onBackgroundColorChange1 = (event) => {\n    setBackgroundColor1(event.target.value)\n  }\n\n  const onColorChange2 = (event) => {\n    setColor2(event.target.value)\n  }\n\n  const onBackgroundColorChange2 = (event) => {\n    setBackgroundColor2(event.target.value)\n  }\n\n\n  const onCancelClick = () => {\n    navigate(\"/home/\")\n  }\n\n  const onSaveClick = () => {\n    packSettings()\n    navigate(\"/home/\")\n\n  }\n\n\n\n  return (\n    <Layout>\n      <SEO title=\"Settings\" />\n      <>\n        <div className=\"settings-vertical\">\n          <Grid\n            className={classes.root}\n            container\n            spacing={0}\n            justify=\"space-around\"\n            direction=\"column\"\n          >\n            <Grid item className={classes.title}>\n              <Title label=\"Settings\" />\n            </Grid>\n\n            <Grid\n              container\n              spacing={2}\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item className={classes.button}>\n                <ControlButton\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onUndoClick}\n                >\n                  Undo\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onFinishGameClick}\n                >\n                  Finish Game\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onResetGameClick}\n                >\n                  Reset Game\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onFinishMatchClick}\n                >\n                  Finish Match\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onResetMatchClick}\n                >\n                  Reset Match\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onToggleGoodGuysClick}\n                >\n                  Toggle \"Good Guys\"\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onToggleHorizontalClick}\n                >\n                  Toggle Horizontal\n                </ControlButton>\n              </Grid>\n              <Grid item className={classes.button}>\n                <hr />\n              </Grid>\n               <Grid item className={classes.button}>\n                <ControlButton\n                  className={classes.button}\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onDefaultColorsClick}\n                >\n                  Default Colors\n                </ControlButton>\n              </Grid>\n           </Grid>\n\n            <Grid\n              container\n              spacing={2}\n              justify=\"space-around\"\n              alignItems=\"center\"\n            >\n              <Grid item className={classes.textfield}>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"Team 1 text\"\n                  value={color1}\n                  className={classes.textField}\n                  helperText=\"color name or CSS hex (ie. #000, #000000)\"\n                  margin=\"normal\"\n                  onChange={onColorChange1}\n                />\n              </Grid>\n              <Grid item className={classes.textfield}>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"Team 1 background\"\n                  value={backgroundColor1}\n                  className={classes.textField}\n                  helperText=\"color name or CSS hex (ie. #000, #000000)\"\n                  margin=\"normal\"\n                  onChange={onBackgroundColorChange1}\n                />\n              </Grid>\n              <Grid item className={classes.textfield}>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"Team 2 text\"\n                  value={color2}\n                  className={classes.textField}\n                  helperText=\"color name or CSS hex (ie. #000, #000000)\"\n                  margin=\"normal\"\n                  onChange={onColorChange2}\n                />\n              </Grid>\n              <Grid item className={classes.textfield}>\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"Team 2 background\"\n                  value={backgroundColor2}\n                  className={classes.textField}\n                  helperText=\"color name or CSS hex (ie. #000, #000000)\"\n                  margin=\"normal\"\n                  onChange={onBackgroundColorChange2}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              className={classes.buttonRow}\n              container\n              spacing={8}\n              justify=\"space-around\"\n              alignItems=\"center\"\n              direction=\"row\"\n            >\n              <Grid item xs={4}>\n                <ControlButton\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onCancelClick}\n                >\n                  Cancel\n                </ControlButton>\n              </Grid>\n              <Grid item xs={4}>\n                <ControlButton\n                  color=\"black\"\n                  backgroundColor=\"gray\"\n                  onButtonClick={onSaveClick}\n                >\n                  Save\n                </ControlButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <div className=\"settings-horizontal\">\n          <LandscapeWarning />\n        </div>\n      </>\n    </Layout>\n  )\n}\n\nexport default SettingsPage\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Settings from \"../components/settings\"\n\nconst SettingsPage = () => (\n  <Layout>\n    <SEO title=\"Settings\" />\n    <Settings />\n  </Layout>\n)\n\nexport default SettingsPage\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: \"100%\",\n    height: \"8vh\",\n    borderRadius: 20,\n    color: props => props.color,\n    backgroundColor: props => props.backgroundColor,\n    '&:hover, &:focus': {\n      color: props => props.color,\n      backgroundColor: props => props.backgroundColor,\n    },\n    transform: props => { return(props.horizontal ? \"rotate(-90deg)\" : \"\") }\n  },\n}))\n\nexport default function ControlButton(props) {\n  const classes = useStyles(props)\n\n  const onButtonClick = () => {\n    props.onButtonClick()\n  }\n\n  return (\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onButtonClick}\n      >\n         {props.children}\n      </Button>\n  )\n}\n","import React from \"react\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 80,\n  },\n  title: {\n    width: \"80vw\",\n  },\n  button: {\n    width: \"80vw\",\n  },\n  textfield: {\n    width: 400,\n  },\n  buttonRow: {\n    width: \"80vw\",\n    marginTop: 10,\n  },\n}))\n\nconst LandscapeWarning = () => {\n  const classes = useStyles()\n\n  return (\n    <Grid\n    className={classes.root}\n    container\n    spacing={0}\n    justify=\"space-around\"\n    direction=\"column\"\n  >\n    <Typography\n      className={classes.paragraph}\n      variant=\"body1\"\n      gutterBottom\n    >\n      Automatic formating for horizontal or landscape mode is not\n      available. A workaround is to lock the screen rotation on your\n      phone and use the settings for horizontal mode. Then all the text\n      will be rotated 90 degrees.\n    </Typography>\n  </Grid>\n)\n}\n\nexport default LandscapeWarning\n","\nexport function getFromLS(key) {\n  let ls = {}\n  if (window.localStorage) {\n    try {\n      ls = window.localStorage.getItem(\"simple-score-volleyball\")\n    } catch (e) {\n      /*Ignore*/\n    }\n  }\n  return ls\n}\n\nexport function saveToLS(key, value) {\n  if (window.localStorage) {\n    window.localStorage.setItem(\"simple-score-volleyball\", value)\n  }\n}\n","import React from \"react\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"10vh\",\n  },\n}))\n\nexport default function Title(props) {\n  const classes = useStyles()\n\n  return (\n    <Grid container spacing={3} justify=\"space-around\" direction=\"row\">\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n        <h2 className={classes.title}>{props.label}</h2>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","\nconst GAME_MAX = 25\nvar orderAB = true\nvar stack = [] // will always be orderAB === true; previous states\nvar gameA = 0\nvar gameB = 0\nvar matchA = 0\nvar matchB = 0\nvar gameDone = false\nvar matchDone = false\n\nfunction engine_push() {\n  let entry\n  if (orderAB) {\n    entry = [gameA, gameB, matchA, matchB, gameDone, matchDone]\n  } else {\n    entry = [gameB, gameA, matchB, matchA, gameDone, matchDone]\n  }\n  stack.push(entry)\n}\n\nfunction engine_check() {\n    if (gameA >= GAME_MAX || gameB >= GAME_MAX) {\n        if ((gameA - gameB) >= 2) {\n            gameDone = true\n            matchA += 1\n        }    \n        if ((gameB - gameA) >= 2) {\n            gameDone = true\n            matchB += 1\n        }    \n    }\n}\n\nfunction engine_reset() {\n  orderAB = true\n  stack = [] // will always be orderAB === true\n  gameA = 0\n  gameB = 0\n  matchA = 0\n  matchB = 0\n  gameDone = false\n  matchDone = false\n}\n\nexport function engine_toggleOrder() {\n  orderAB = !orderAB\n}\n\nexport function engine_undo() {\n  if (stack.length > 0) {\n    if (orderAB) {\n      ;[gameA, gameB, matchA, matchB, gameDone, matchDone] = stack.pop()\n    } else {\n      ;[gameB, gameA, matchB, matchA, gameDone, matchDone] = stack.pop()\n    }\n  }\n}\n\nexport function engine_pointA() {\n    if (!gameDone) {\n        engine_push()\n        if (orderAB)\n            gameA += 1\n        else\n            gameB += 1\n        engine_check()\n    }\n}\n\nexport function engine_pointB() {\n    if (!gameDone) {\n        engine_push()\n        if (orderAB)\n            gameB += 1\n        else\n            gameA += 1\n        engine_check()\n    }\n}\n\nexport function engine_finishGame() {\n    engine_push()\n    gameDone = true\n    if (gameA > gameB) {\n        matchA += 1\n    }\n    else {\n        matchB += 1\n    }\n}\n\nexport function engine_resetGame() {\n    engine_push()\n    gameDone = false\n    gameA = 0\n    gameB = 0   \n}\n\nexport function engine_finishMatch() {\n  if (!matchDone) {\n    engine_push()\n    matchDone = true\n  }\n}\n\nexport function engine_resetMatch() {\n  engine_reset()\n}\n\nexport function engine_load(settings) {\n    if (settings.length) {\n        settings = JSON.parse(settings)\n        orderAB = settings['orderAB']\n        gameA = settings['gameA']\n        gameB = settings['gameB']\n        matchA = settings['matchA']\n        matchB = settings['matchB']\n        gameDone = settings['gameDone']\n        matchDone = settings['matchDone']\n        stack = JSON.parse(settings['stack'])\n    }\n}\n\nexport function engine_save() {\n    let settings = {}\n    settings['orderAB'] = orderAB\n    settings['gameA'] = gameA\n    settings['gameB'] = gameB\n    settings['matchA'] = matchA\n    settings['matchB'] = matchB\n    settings['gameDone'] = gameDone\n    settings['matchDone'] = matchDone\n    settings['stack'] = JSON.stringify(stack)\n    return JSON.stringify(settings)\n}\n\nexport function engine_get() {\n  if (orderAB) {\n    return [gameA, gameB, matchA, matchB, gameDone, matchDone]\n  } else {\n    return [gameB, gameA, matchB, matchA, gameDone, matchDone]\n  }\n}\n"],"sourceRoot":""}